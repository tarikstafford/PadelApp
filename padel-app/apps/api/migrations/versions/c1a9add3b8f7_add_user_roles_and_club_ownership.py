"""Add user roles and club ownership

Revision ID: c1a9add3b8f7
Revises: e1f59e29f633
Create Date: 2025-06-08 04:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c1a9add3b8f7'
down_revision: Union[str, None] = 'e1f59e29f633'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    user_role = postgresql.ENUM('PLAYER', 'CLUB_ADMIN', name='userrole')
    user_role.create(op.get_bind())
    
    op.add_column('users', sa.Column('role', user_role, nullable=False, server_default='PLAYER'))
    
    op.add_column('clubs', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.create_foreign_key('fk_clubs_owner_id_users', 'clubs', 'users', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_clubs_owner_id_users', 'clubs', type_='foreignkey')
    op.drop_column('clubs', 'owner_id')
    op.drop_column('users', 'role')
    
    user_role = postgresql.ENUM('PLAYER', 'CLUB_ADMIN', name='userrole')
    user_role.drop(op.get_bind())
    # ### end Alembic commands ### 