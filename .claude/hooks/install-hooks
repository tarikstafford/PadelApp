#!/bin/bash
# Install PadelGo git hooks

echo "üîß Installing PadelGo Git Hooks"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Change to repo root
REPO_ROOT="$(git rev-parse --show-toplevel)"
cd "$REPO_ROOT"

# Check if .git directory exists
if [ ! -d ".git" ]; then
    echo -e "${RED}‚ùå Not in a git repository${NC}"
    exit 1
fi

# Create hooks directory if it doesn't exist
mkdir -p .git/hooks

# Install hooks
echo -e "${YELLOW}üì¶ Installing hooks...${NC}"

# Pre-commit hook
if [ -f ".claude/hooks/pre-commit" ]; then
    ln -sf ../../.claude/hooks/pre-commit .git/hooks/pre-commit
    echo -e "${GREEN}‚úÖ pre-commit hook installed${NC}"
else
    echo -e "${RED}‚ùå pre-commit hook not found${NC}"
fi

# Pre-push hook
if [ -f ".claude/hooks/pre-push" ]; then
    ln -sf ../../.claude/hooks/pre-push .git/hooks/pre-push
    echo -e "${GREEN}‚úÖ pre-push hook installed${NC}"
else
    echo -e "${RED}‚ùå pre-push hook not found${NC}"
fi

# Post-merge hook
if [ -f ".claude/hooks/post-merge" ]; then
    ln -sf ../../.claude/hooks/post-merge .git/hooks/post-merge
    echo -e "${GREEN}‚úÖ post-merge hook installed${NC}"
else
    echo -e "${RED}‚ùå post-merge hook not found${NC}"
fi

echo -e "${GREEN}üéâ Git hooks installation complete!${NC}"
echo -e "${YELLOW}üìù To test the installation, try running:${NC}"
echo -e "${YELLOW}   ./.claude/hooks/quality-check${NC}"